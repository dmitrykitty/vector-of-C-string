<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,211,041 samples, 0.07%)</title><rect x="503.2" y="549" width="0.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="506.16" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (736,258 samples, 0.02%)</title><rect x="1030.3" y="309" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1033.29" y="319.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1,473,209 samples, 0.05%)</title><rect x="1006.2" y="373" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1009.15" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (737,496 samples, 0.02%)</title><rect x="856.9" y="389" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="859.86" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,946,709 samples, 0.10%)</title><rect x="55.5" y="549" width="1.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="58.46" y="559.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (982,077 samples, 0.03%)</title><rect x="784.7" y="357" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="787.70" y="367.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (11,243,851 samples, 0.36%)</title><rect x="770.3" y="341" width="4.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="773.33" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (730,363 samples, 0.02%)</title><rect x="920.8" y="325" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="923.77" y="335.5" ></text>
</g>
<g >
<title>testing::Test::Run (871,873,887 samples, 28.17%)</title><rect x="712.8" y="453" width="332.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="715.83" y="463.5" >testing::Test::Run</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (490,440 samples, 0.02%)</title><rect x="790.3" y="325" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="793.30" y="335.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (737,237 samples, 0.02%)</title><rect x="726.8" y="325" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="729.78" y="335.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (5,766,158 samples, 0.19%)</title><rect x="885.5" y="373" width="2.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="888.54" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,474,730 samples, 0.05%)</title><rect x="1007.8" y="357" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1010.84" y="367.5" ></text>
</g>
<g >
<title>[unknown] (737,237 samples, 0.02%)</title><rect x="726.8" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="729.78" y="383.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::successful_test_count (737,738 samples, 0.02%)</title><rect x="1045.8" y="437" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1048.80" y="447.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (3,618,106 samples, 0.12%)</title><rect x="890.0" y="389" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="892.95" y="399.5" ></text>
</g>
<g >
<title>operator delete[] (737,462 samples, 0.02%)</title><rect x="726.5" y="357" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="729.50" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (2,211,480 samples, 0.07%)</title><rect x="725.9" y="389" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="728.94" y="399.5" ></text>
</g>
<g >
<title>__sanitizer_malloc_hook (1,463,578 samples, 0.05%)</title><rect x="489.9" y="581" width="0.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="492.85" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (710,369 samples, 0.02%)</title><rect x="910.0" y="309" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="912.97" y="319.5" ></text>
</g>
<g >
<title>testing::internal::String::CStringEquals (6,846,806 samples, 0.22%)</title><rect x="798.5" y="373" width="2.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="801.50" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (19,141,104 samples, 0.62%)</title><rect x="987.6" y="357" width="7.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="990.62" y="367.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (7,824,088 samples, 0.25%)</title><rect x="787.7" y="389" width="3.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="790.69" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (7,115,818 samples, 0.23%)</title><rect x="709.7" y="597" width="2.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="712.66" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::internal_write (464,509 samples, 0.02%)</title><rect x="473.1" y="581" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="476.14" y="591.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (107,880,699 samples, 3.49%)</title><rect x="168.4" y="581" width="41.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="171.38" y="591.5" >__l..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (2,935,725 samples, 0.09%)</title><rect x="789.4" y="357" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="792.37" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (709,234 samples, 0.02%)</title><rect x="889.1" y="373" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="892.12" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (25,600,474 samples, 0.83%)</title><rect x="823.1" y="389" width="9.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="826.11" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::DTLS_on_tls_get_addr (13,704,009 samples, 0.44%)</title><rect x="99.6" y="565" width="5.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="102.57" y="575.5" ></text>
</g>
<g >
<title>__interceptor_memset (735,422 samples, 0.02%)</title><rect x="1039.0" y="325" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1042.00" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2,926,801 samples, 0.09%)</title><rect x="1180.5" y="597" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1183.48" y="607.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest8_Test::TestBody (193,805,757 samples, 6.26%)</title><rect x="923.3" y="405" width="73.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="926.27" y="415.5" >PtrCStri..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (736,732 samples, 0.02%)</title><rect x="923.0" y="293" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="925.99" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (5,869,654 samples, 0.19%)</title><rect x="763.8" y="357" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="766.81" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2,208,082 samples, 0.07%)</title><rect x="995.5" y="389" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="998.48" y="399.5" ></text>
</g>
<g >
<title>operator new[] (732,498 samples, 0.02%)</title><rect x="809.4" y="373" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="812.35" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (736,258 samples, 0.02%)</title><rect x="1030.3" y="293" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1033.29" y="303.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;unsigned long, unsigned long,  (490,570 samples, 0.02%)</title><rect x="1045.1" y="405" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1048.06" y="415.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (736,879 samples, 0.02%)</title><rect x="985.1" y="341" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="988.09" y="351.5" ></text>
</g>
<g >
<title>testing::TestSuite::AddTestInfo (460,702 samples, 0.01%)</title><rect x="1046.3" y="517" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1049.25" y="527.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (735,115 samples, 0.02%)</title><rect x="713.9" y="373" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="716.86" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1,425,509 samples, 0.05%)</title><rect x="908.9" y="341" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="911.88" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (475,446 samples, 0.02%)</title><rect x="1045.2" y="357" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1048.25" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (30,933,834 samples, 1.00%)</title><rect x="983.1" y="389" width="11.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="986.13" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (1,935,192 samples, 0.06%)</title><rect x="1179.7" y="597" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.74" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (4,890,963 samples, 0.16%)</title><rect x="796.6" y="293" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="799.64" y="303.5" ></text>
</g>
<g >
<title>non-virtual thunk to std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (461,127 samples, 0.01%)</title><rect x="498.2" y="581" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="501.20" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (737,413 samples, 0.02%)</title><rect x="1040.4" y="373" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1043.40" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="245" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1,473,209 samples, 0.05%)</title><rect x="1030.6" y="341" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1033.57" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2,896,963 samples, 0.09%)</title><rect x="907.8" y="341" width="1.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="910.77" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,474,747 samples, 0.05%)</title><rect x="984.0" y="357" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="986.97" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (3,646,015 samples, 0.12%)</title><rect x="504.0" y="549" width="1.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="507.00" y="559.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (732,688 samples, 0.02%)</title><rect x="79.5" y="549" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="82.48" y="559.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (2,689,798 samples, 0.09%)</title><rect x="1088.0" y="597" width="1.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1090.97" y="607.5" ></text>
</g>
<g >
<title>testing::TestSuite::successful_test_count (737,738 samples, 0.02%)</title><rect x="1045.8" y="405" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1048.80" y="415.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (1,227,874 samples, 0.04%)</title><rect x="1044.6" y="405" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1047.59" y="415.5" ></text>
</g>
<g >
<title>[unknown] (737,237 samples, 0.02%)</title><rect x="726.8" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="729.78" y="351.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperNE&lt;char*, char*&gt; (737,866 samples, 0.02%)</title><rect x="749.0" y="389" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="751.98" y="399.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (737,916 samples, 0.02%)</title><rect x="891.3" y="373" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="894.33" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="421" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="431.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3,698,879 samples, 0.12%)</title><rect x="824.8" y="357" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="827.78" y="367.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (5,059,993 samples, 0.16%)</title><rect x="806.6" y="373" width="1.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="809.60" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="357" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (1,474,940 samples, 0.05%)</title><rect x="875.1" y="341" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="878.14" y="351.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (1,459,820 samples, 0.05%)</title><rect x="806.0" y="373" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="809.04" y="383.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (13,691,075 samples, 0.44%)</title><rect x="793.3" y="373" width="5.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="796.28" y="383.5" ></text>
</g>
<g >
<title>_sub_I_00099_1 (919,605 samples, 0.03%)</title><rect x="1047.1" y="581" width="0.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1050.13" y="591.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest3_Test::TestBody (220,229,754 samples, 7.12%)</title><rect x="801.3" y="405" width="84.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="804.30" y="415.5" >PtrCStrin..</text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;testing::TestInfo**, std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt; &gt;, testing::TestInfo**, __gnu_cxx::__ops::_Iter_comp_iter&lt;testing::TestSuite::Run (458,331 samples, 0.01%)</title><rect x="712.4" y="437" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="715.37" y="447.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I__ZN7testing15AssertionResultC2ERKS0_ (922,317 samples, 0.03%)</title><rect x="1046.8" y="581" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1049.78" y="591.5" ></text>
</g>
<g >
<title>[unknown] (52,732,162 samples, 1.70%)</title><rect x="56.6" y="565" width="20.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="59.59" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,425,509 samples, 0.05%)</title><rect x="908.9" y="325" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="911.88" y="335.5" ></text>
</g>
<g >
<title>testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd (737,738 samples, 0.02%)</title><rect x="1045.8" y="469" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1048.80" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,431,215 samples, 0.05%)</title><rect x="909.7" y="325" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="912.69" y="335.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (1,474,955 samples, 0.05%)</title><rect x="748.4" y="389" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="751.42" y="399.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2,936,840 samples, 0.09%)</title><rect x="845.0" y="357" width="1.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="847.97" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (6,374,660 samples, 0.21%)</title><rect x="757.8" y="373" width="2.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="760.84" y="383.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (5,135,801 samples, 0.17%)</title><rect x="701.0" y="597" width="1.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="703.96" y="607.5" ></text>
</g>
<g >
<title>check_match (885,090 samples, 0.03%)</title><rect x="1182.3" y="597" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1185.26" y="607.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (735,609 samples, 0.02%)</title><rect x="712.5" y="453" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="715.55" y="463.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (735,939 samples, 0.02%)</title><rect x="1008.7" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1011.68" y="399.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (491,051 samples, 0.02%)</title><rect x="759.1" y="357" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="762.15" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (736,455 samples, 0.02%)</title><rect x="1041.2" y="341" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1044.24" y="351.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="133" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="143.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_M_head (490,440 samples, 0.02%)</title><rect x="790.3" y="309" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="793.30" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1,474,675 samples, 0.05%)</title><rect x="740.3" y="341" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="743.27" y="351.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (736,798 samples, 0.02%)</title><rect x="996.0" y="325" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="999.04" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (2,751,738 samples, 0.09%)</title><rect x="1086.9" y="597" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1089.92" y="607.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator= (728,903 samples, 0.02%)</title><rect x="888.0" y="389" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="891.01" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16,931,019 samples, 0.55%)</title><rect x="987.6" y="341" width="6.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="990.62" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (1,468,751 samples, 0.05%)</title><rect x="1043.1" y="405" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1046.10" y="415.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (8,853,666 samples, 0.29%)</title><rect x="498.4" y="581" width="3.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="501.38" y="591.5" ></text>
</g>
<g >
<title>operator new (737,171 samples, 0.02%)</title><rect x="985.9" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="988.93" y="319.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (11,057,484 samples, 0.36%)</title><rect x="721.7" y="389" width="4.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="724.72" y="399.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (980,464 samples, 0.03%)</title><rect x="786.4" y="389" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="789.38" y="399.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (2,879,282 samples, 0.09%)</title><rect x="830.4" y="357" width="1.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="833.37" y="367.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (717,389 samples, 0.02%)</title><rect x="909.1" y="293" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="912.15" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,473,209 samples, 0.05%)</title><rect x="1030.6" y="309" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1033.57" y="319.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (1,445,409 samples, 0.05%)</title><rect x="888.3" y="389" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="891.29" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (732,140 samples, 0.02%)</title><rect x="921.6" y="357" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="924.60" y="367.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (4,417,921 samples, 0.14%)</title><rect x="80.9" y="565" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="83.88" y="575.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (2,213,549 samples, 0.07%)</title><rect x="452.2" y="533" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="455.19" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (738,690 samples, 0.02%)</title><rect x="934.8" y="357" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="937.78" y="367.5" ></text>
</g>
<g >
<title>operator new[] (1,456,766 samples, 0.05%)</title><rect x="856.0" y="373" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="859.03" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator= (19,883,920 samples, 0.64%)</title><rect x="923.8" y="389" width="7.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="926.83" y="399.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (1,474,394 samples, 0.05%)</title><rect x="826.2" y="357" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="829.19" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (6,846,796 samples, 0.22%)</title><rect x="795.9" y="309" width="2.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="798.89" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (460,746 samples, 0.01%)</title><rect x="1046.4" y="453" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1049.43" y="463.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (489,332 samples, 0.02%)</title><rect x="756.0" y="373" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="758.97" y="383.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (22,836,842 samples, 0.74%)</title><rect x="727.9" y="389" width="8.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="730.91" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (27,904,094 samples, 0.90%)</title><rect x="1067.1" y="597" width="10.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1070.10" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (736,455 samples, 0.02%)</title><rect x="1041.2" y="357" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1044.24" y="367.5" ></text>
</g>
<g >
<title>testing::TestInfo::Run (874,049,208 samples, 28.24%)</title><rect x="712.5" y="469" width="333.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="715.55" y="479.5" >testing::TestInfo::Run</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (737,123 samples, 0.02%)</title><rect x="748.7" y="357" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="751.70" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (736,732 samples, 0.02%)</title><rect x="923.0" y="325" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="925.99" y="335.5" ></text>
</g>
<g >
<title>__strlen_avx2 (461,127 samples, 0.01%)</title><rect x="498.2" y="533" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="501.20" y="543.5" ></text>
</g>
<g >
<title>operator new[] (708,266 samples, 0.02%)</title><rect x="854.1" y="357" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="857.10" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest10_Test::TestBody (95,069,764 samples, 3.07%)</title><rect x="713.0" y="405" width="36.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="716.01" y="415.5" >Ptr..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (11,431,592 samples, 0.37%)</title><rect x="1062.7" y="597" width="4.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1065.74" y="607.5" ></text>
</g>
<g >
<title>__interceptor_strcmp.part.0 (81,868,938 samples, 2.65%)</title><rect x="935.6" y="389" width="31.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="938.63" y="399.5" >__..</text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (736,503 samples, 0.02%)</title><rect x="746.2" y="373" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="749.17" y="383.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (738,023 samples, 0.02%)</title><rect x="867.3" y="373" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="870.27" y="383.5" ></text>
</g>
<g >
<title>__strlen_avx2 (978,846 samples, 0.03%)</title><rect x="783.0" y="373" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="786.02" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest6_Test::TestBody (1,442,502 samples, 0.05%)</title><rect x="888.8" y="405" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="891.84" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (1,474,675 samples, 0.05%)</title><rect x="740.3" y="325" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="743.27" y="335.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (19,554,610 samples, 0.63%)</title><rect x="749.8" y="389" width="7.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="752.82" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (489,806 samples, 0.02%)</title><rect x="772.2" y="277" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="775.20" y="287.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;unsigned long, unsigned long&gt; (21,489,895 samples, 0.69%)</title><rect x="766.4" y="373" width="8.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="769.42" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (736,337 samples, 0.02%)</title><rect x="922.4" y="373" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="925.43" y="383.5" ></text>
</g>
<g >
<title>operator delete[] (982,888 samples, 0.03%)</title><rect x="785.1" y="357" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="788.08" y="367.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (717,389 samples, 0.02%)</title><rect x="909.1" y="277" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="912.15" y="287.5" ></text>
</g>
<g >
<title>__sanitizer::internal_madvise (739,114 samples, 0.02%)</title><rect x="1153.8" y="597" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1156.75" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (1,467,917 samples, 0.05%)</title><rect x="797.9" y="261" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="800.94" y="271.5" ></text>
</g>
<g >
<title>mmap64 (313,213 samples, 0.01%)</title><rect x="1182.8" y="597" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1185.76" y="607.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator[] (978,544 samples, 0.03%)</title><rect x="775.9" y="389" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="778.92" y="399.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (489,241 samples, 0.02%)</title><rect x="99.4" y="565" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="102.39" y="575.5" ></text>
</g>
<g >
<title>__sanitizer::DTLS_on_tls_get_addr (458,195 samples, 0.01%)</title><rect x="411.8" y="581" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="414.78" y="591.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4,423,397 samples, 0.14%)</title><rect x="744.2" y="341" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="747.20" y="351.5" ></text>
</g>
<g >
<title>_dl_exception_create_format (459,015 samples, 0.01%)</title><rect x="495.2" y="581" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="498.18" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_M_head (489,501 samples, 0.02%)</title><rect x="765.9" y="293" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="768.86" y="303.5" ></text>
</g>
<g >
<title>[unknown] (733,460 samples, 0.02%)</title><rect x="1008.4" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1011.40" y="383.5" ></text>
</g>
<g >
<title>__lsan::ScanRangeForPointers (10,781,544 samples, 0.35%)</title><rect x="1048.0" y="597" width="4.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1051.04" y="607.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (737,866 samples, 0.02%)</title><rect x="749.0" y="373" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="751.98" y="383.5" ></text>
</g>
<g >
<title>testing::internal::(anonymous namespace)::UnitTestFilter::UnitTestFilter (460,746 samples, 0.01%)</title><rect x="1046.4" y="501" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1049.43" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (460,746 samples, 0.01%)</title><rect x="1046.4" y="469" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1049.43" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (11,059,988 samples, 0.36%)</title><rect x="737.7" y="357" width="4.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="740.74" y="367.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="85" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="95.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (26,897,155 samples, 0.87%)</title><rect x="12.8" y="549" width="10.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="15.76" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1,471,886 samples, 0.05%)</title><rect x="1031.1" y="341" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1034.14" y="351.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperNE&lt;char*, char*&gt; (1,474,080 samples, 0.05%)</title><rect x="1042.1" y="389" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1045.08" y="399.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (490,908 samples, 0.02%)</title><rect x="760.1" y="357" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="763.08" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I__ZN73PtrCStringVectorTester_defaultConstructor_sizeOfEmptyContainerIsZero_Test10test_info_E (1,842,791 samples, 0.06%)</title><rect x="1046.1" y="581" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1049.08" y="591.5" ></text>
</g>
<g >
<title>__tls_get_addr (978,274 samples, 0.03%)</title><rect x="768.7" y="357" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="771.65" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (82,897,978 samples, 2.68%)</title><rect x="23.6" y="581" width="31.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="26.58" y="591.5" >Pt..</text>
</g>
<g >
<title>all (3,094,907,181 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>__strlen_avx2 (17,680,647 samples, 0.57%)</title><rect x="899.6" y="389" width="6.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="902.65" y="399.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (978,564 samples, 0.03%)</title><rect x="99.0" y="565" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="102.01" y="575.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_strcmp (738,195 samples, 0.02%)</title><rect x="884.4" y="357" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="887.42" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (736,293 samples, 0.02%)</title><rect x="726.2" y="357" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="729.22" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (3,423,693 samples, 0.11%)</title><rect x="797.2" y="277" width="1.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="800.20" y="287.5" ></text>
</g>
<g >
<title>do_lookup_x (431,704 samples, 0.01%)</title><rect x="1182.6" y="597" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1185.59" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (10,328,743 samples, 0.33%)</title><rect x="858.5" y="373" width="4.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="861.55" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (737,764 samples, 0.02%)</title><rect x="741.7" y="325" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="744.67" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (980,968 samples, 0.03%)</title><rect x="782.6" y="373" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="785.65" y="383.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (977,390 samples, 0.03%)</title><rect x="786.0" y="389" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="789.01" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt;::push_back (460,702 samples, 0.01%)</title><rect x="1046.3" y="501" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1049.25" y="511.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="501" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (736,258 samples, 0.02%)</title><rect x="1030.3" y="325" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1033.29" y="335.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2,906,924 samples, 0.09%)</title><rect x="11.7" y="549" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="14.65" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (735,429 samples, 0.02%)</title><rect x="1027.8" y="357" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1030.77" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (4,387,600 samples, 0.14%)</title><rect x="772.8" y="261" width="1.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="775.76" y="271.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (12,511,748 samples, 0.40%)</title><rect x="490.4" y="565" width="4.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="493.41" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1,474,092 samples, 0.05%)</title><rect x="1052.2" y="597" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.15" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (22,855,109 samples, 0.74%)</title><rect x="737.2" y="373" width="8.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="740.17" y="383.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (7,268,026 samples, 0.23%)</title><rect x="56.6" y="549" width="2.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="59.59" y="559.5" ></text>
</g>
<g >
<title>testing::internal::StringFromGTestEnv (461,053 samples, 0.01%)</title><rect x="1047.0" y="549" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1049.96" y="559.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (981,119 samples, 0.03%)</title><rect x="758.8" y="357" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="761.77" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_M_head (737,228 samples, 0.02%)</title><rect x="862.2" y="293" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="865.20" y="303.5" ></text>
</g>
<g >
<title>testing::internal::BoolFromGTestEnv (461,264 samples, 0.01%)</title><rect x="1046.8" y="549" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1049.78" y="559.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (736,319 samples, 0.02%)</title><rect x="1027.5" y="357" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1030.49" y="367.5" ></text>
</g>
<g >
<title>operator delete[] (739,429 samples, 0.02%)</title><rect x="811.9" y="373" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="814.87" y="383.5" ></text>
</g>
<g >
<title>[unknown] (733,460 samples, 0.02%)</title><rect x="1008.4" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1011.40" y="351.5" ></text>
</g>
<g >
<title>testing::Message::GetString[abi:cxx11] (475,446 samples, 0.02%)</title><rect x="1045.2" y="405" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1048.25" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (4,423,397 samples, 0.14%)</title><rect x="744.2" y="357" width="1.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="747.20" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (7,335,751 samples, 0.24%)</title><rect x="787.9" y="373" width="2.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="790.88" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (5,898,468 samples, 0.19%)</title><rect x="742.0" y="357" width="2.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="744.95" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator[] (1,474,508 samples, 0.05%)</title><rect x="931.4" y="389" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="934.42" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="165" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="175.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (1,694,001 samples, 0.05%)</title><rect x="438.1" y="533" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="441.10" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="293" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (1,470,041 samples, 0.05%)</title><rect x="773.9" y="245" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="776.87" y="255.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="469" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3,428,231 samples, 0.11%)</title><rect x="764.7" y="341" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="767.74" y="351.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator[] (736,585 samples, 0.02%)</title><rect x="889.7" y="389" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="892.67" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (43,356,339 samples, 1.40%)</title><rect x="473.3" y="581" width="16.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="476.32" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (461,053 samples, 0.01%)</title><rect x="1047.0" y="485" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1049.96" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (1,461,494 samples, 0.05%)</title><rect x="908.0" y="309" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="911.04" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (732,140 samples, 0.02%)</title><rect x="921.6" y="373" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="924.60" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,210,085 samples, 0.07%)</title><rect x="994.1" y="341" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="997.08" y="351.5" ></text>
</g>
<g >
<title>operator new[] (726,801 samples, 0.02%)</title><rect x="887.5" y="357" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="890.46" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (21,936,680 samples, 0.71%)</title><rect x="823.1" y="373" width="8.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="826.11" y="383.5" ></text>
</g>
<g >
<title>__pipe (931,961 samples, 0.03%)</title><rect x="409.2" y="581" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="412.18" y="591.5" ></text>
</g>
<g >
<title>operator new[] (490,352 samples, 0.02%)</title><rect x="783.4" y="373" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="786.39" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (737,410 samples, 0.02%)</title><rect x="987.3" y="357" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="990.34" y="367.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (737,076 samples, 0.02%)</title><rect x="724.0" y="373" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="726.97" y="383.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (12,003,293 samples, 0.39%)</title><rect x="209.5" y="581" width="4.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="212.52" y="591.5" ></text>
</g>
<g >
<title>testing::TestResult::Skipped (737,738 samples, 0.02%)</title><rect x="1045.8" y="341" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1048.80" y="351.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (2,450,013 samples, 0.08%)</title><rect x="780.8" y="373" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="783.78" y="383.5" ></text>
</g>
<g >
<title>testing::internal::CodeLocation::CodeLocation (460,555 samples, 0.01%)</title><rect x="1046.6" y="565" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1049.61" y="575.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (734,065 samples, 0.02%)</title><rect x="55.2" y="549" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="58.18" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,447,390 samples, 0.05%)</title><rect x="921.3" y="389" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="924.32" y="399.5" ></text>
</g>
<g >
<title>[unknown] (460,022 samples, 0.01%)</title><rect x="412.0" y="565" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="414.95" y="575.5" ></text>
</g>
<g >
<title>testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (871,873,887 samples, 28.17%)</title><rect x="712.8" y="437" width="332.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="715.83" y="447.5" >testing::internal::HandleExceptionsInMethodI..</text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (1,474,955 samples, 0.05%)</title><rect x="748.4" y="373" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="751.42" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (738,255 samples, 0.02%)</title><rect x="869.2" y="373" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="872.24" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (5,901,846 samples, 0.19%)</title><rect x="877.4" y="277" width="2.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="880.39" y="287.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (737,489 samples, 0.02%)</title><rect x="809.6" y="389" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="812.63" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2,208,082 samples, 0.07%)</title><rect x="995.5" y="373" width="0.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="998.48" y="383.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (1,475,073 samples, 0.05%)</title><rect x="932.3" y="373" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="935.26" y="383.5" ></text>
</g>
<g >
<title>__asan::asan_delete (732,794 samples, 0.02%)</title><rect x="811.0" y="357" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="814.03" y="367.5" ></text>
</g>
<g >
<title>operator new (725,398 samples, 0.02%)</title><rect x="908.3" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="911.32" y="303.5" ></text>
</g>
<g >
<title>testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (871,873,887 samples, 28.17%)</title><rect x="712.8" y="421" width="332.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="715.83" y="431.5" >testing::internal::HandleSehExceptionsInMeth..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (2,948,242 samples, 0.10%)</title><rect x="746.7" y="357" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="749.73" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (737,171 samples, 0.02%)</title><rect x="985.9" y="325" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="988.93" y="335.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (5,857,274 samples, 0.19%)</title><rect x="772.4" y="277" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="775.38" y="287.5" ></text>
</g>
<g >
<title>testing::internal::String::CStringEquals (11,069,495 samples, 0.36%)</title><rect x="880.5" y="373" width="4.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="883.49" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (634,278 samples, 0.02%)</title><rect x="822.4" y="373" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="825.42" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (4,423,747 samples, 0.14%)</title><rect x="1006.7" y="389" width="1.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1009.71" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (738,596 samples, 0.02%)</title><rect x="986.2" y="341" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="989.22" y="351.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (4,401,458 samples, 0.14%)</title><rect x="779.1" y="373" width="1.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="782.10" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (717,389 samples, 0.02%)</title><rect x="909.1" y="309" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="912.15" y="319.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (1,702,448 samples, 0.06%)</title><rect x="59.4" y="549" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="62.36" y="559.5" ></text>
</g>
<g >
<title>testing::Message::~Message (472,872 samples, 0.02%)</title><rect x="1045.4" y="405" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1048.43" y="415.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (2,474,761 samples, 0.08%)</title><rect x="821.3" y="373" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="824.29" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (736,664 samples, 0.02%)</title><rect x="985.4" y="341" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="988.37" y="351.5" ></text>
</g>
<g >
<title>[unknown] (33,429,160 samples, 1.08%)</title><rect x="10.8" y="565" width="12.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.83" y="575.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (5,889,974 samples, 0.19%)</title><rect x="105.0" y="565" width="2.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="107.96" y="575.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;int, int&gt; (737,594 samples, 0.02%)</title><rect x="996.9" y="373" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="999.88" y="383.5" ></text>
</g>
<g >
<title>__asan::asan_delete (42,650,439 samples, 1.38%)</title><rect x="124.2" y="581" width="16.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="127.16" y="591.5" ></text>
</g>
<g >
<title>[unknown] (82,897,978 samples, 2.68%)</title><rect x="23.6" y="565" width="31.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="26.58" y="575.5" >[u..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (489,800 samples, 0.02%)</title><rect x="774.4" y="261" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="777.43" y="271.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (7,375,533 samples, 0.24%)</title><rect x="876.8" y="293" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="879.83" y="303.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (6,600,708 samples, 0.21%)</title><rect x="495.4" y="581" width="2.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="498.36" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (7,824,589 samples, 0.25%)</title><rect x="795.5" y="325" width="3.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="798.52" y="335.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (1,472,007 samples, 0.05%)</title><rect x="709.1" y="597" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="712.10" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,227,422 samples, 0.04%)</title><rect x="78.7" y="549" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="81.73" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7,192,770 samples, 0.23%)</title><rect x="907.5" y="357" width="2.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="910.49" y="367.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (28,029,826 samples, 0.91%)</title><rect x="869.8" y="373" width="10.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="872.80" y="383.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (2,448,521 samples, 0.08%)</title><rect x="781.7" y="373" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="784.71" y="383.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;unsigned long, int&gt; (736,951 samples, 0.02%)</title><rect x="922.7" y="389" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="925.71" y="399.5" ></text>
</g>
<g >
<title>dl_main (6,600,708 samples, 0.21%)</title><rect x="495.4" y="565" width="2.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="498.36" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (1,475,320 samples, 0.05%)</title><rect x="858.0" y="373" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="860.98" y="383.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (978,589 samples, 0.03%)</title><rect x="759.3" y="357" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="762.33" y="367.5" ></text>
</g>
<g >
<title>__lsan::ResetTagsCb (7,999,681 samples, 0.26%)</title><rect x="219.5" y="581" width="3.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="222.49" y="591.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (18,440,386 samples, 0.60%)</title><rect x="873.5" y="357" width="7.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="876.45" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (713,348 samples, 0.02%)</title><rect x="808.5" y="373" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="811.53" y="383.5" ></text>
</g>
<g >
<title>testing::internal::MakeAndRegisterTestInfo (1,382,236 samples, 0.04%)</title><rect x="1046.1" y="549" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1049.08" y="559.5" ></text>
</g>
<g >
<title>operator delete[] (728,903 samples, 0.02%)</title><rect x="888.0" y="357" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="891.01" y="367.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (4,354,296 samples, 0.14%)</title><rect x="214.1" y="581" width="1.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="217.09" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (1,958,186 samples, 0.06%)</title><rect x="1151.9" y="597" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1154.89" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2,202,543 samples, 0.07%)</title><rect x="1040.7" y="389" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1043.68" y="399.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (1,474,080 samples, 0.05%)</title><rect x="1042.1" y="373" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1045.08" y="383.5" ></text>
</g>
<g >
<title>__lsan::PointsIntoChunk (980,047 samples, 0.03%)</title><rect x="1047.5" y="597" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1050.48" y="607.5" ></text>
</g>
<g >
<title>[unknown] (90,319,399 samples, 2.92%)</title><rect x="438.1" y="565" width="34.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="441.10" y="575.5" >[u..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (8,098,953 samples, 0.26%)</title><rect x="1028.6" y="357" width="3.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1031.61" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (736,426 samples, 0.02%)</title><rect x="1028.3" y="357" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1031.33" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (489,334 samples, 0.02%)</title><rect x="786.8" y="389" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="789.76" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;testing::TestEventListener*, std::allocator&lt;testing::TestEventListener*&gt; &gt;::operator[] (491,394 samples, 0.02%)</title><rect x="1045.6" y="437" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1048.61" y="447.5" ></text>
</g>
<g >
<title>testing::Message::GetString[abi:cxx11] (461,053 samples, 0.01%)</title><rect x="1047.0" y="517" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1049.96" y="527.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="101" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="111.5" ></text>
</g>
<g >
<title>[unknown] (730,330 samples, 0.02%)</title><rect x="891.6" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="894.61" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (720,237 samples, 0.02%)</title><rect x="1043.7" y="405" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1046.66" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (730,363 samples, 0.02%)</title><rect x="920.8" y="341" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="923.77" y="351.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (1,465,130 samples, 0.05%)</title><rect x="755.4" y="373" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="758.41" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (736,732 samples, 0.02%)</title><rect x="923.0" y="261" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="925.99" y="271.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (19,606,934 samples, 0.63%)</title><rect x="892.2" y="389" width="7.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="895.17" y="399.5" ></text>
</g>
<g >
<title>operator new[] (1,181,664 samples, 0.04%)</title><rect x="822.7" y="373" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="825.66" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest9_Test::TestBody (119,281,322 samples, 3.85%)</title><rect x="997.2" y="405" width="45.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1000.17" y="415.5" >PtrC..</text>
</g>
<g >
<title>testing::internal::StringStreamToString (461,264 samples, 0.01%)</title><rect x="1046.8" y="501" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1049.78" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (4,423,879 samples, 0.14%)</title><rect x="985.1" y="357" width="1.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="988.09" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (489,310 samples, 0.02%)</title><rect x="789.7" y="341" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="792.74" y="351.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest7_Test::TestBody (88,867,432 samples, 2.87%)</title><rect x="889.4" y="405" width="33.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="892.39" y="415.5" >Pt..</text>
</g>
<g >
<title>PtrCStringVector::operator[] (2,950,987 samples, 0.10%)</title><rect x="812.2" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="815.16" y="399.5" ></text>
</g>
<g >
<title>[unknown] (733,460 samples, 0.02%)</title><rect x="1008.4" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1011.40" y="399.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (738,696 samples, 0.02%)</title><rect x="867.8" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="870.83" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_head (1,469,686 samples, 0.05%)</title><rect x="765.5" y="309" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="768.49" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1,453,006 samples, 0.05%)</title><rect x="920.2" y="341" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="923.21" y="351.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="453" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="463.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="325" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="309" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (472,872 samples, 0.02%)</title><rect x="1045.4" y="389" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1048.43" y="399.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_arrayIndexingOperator_throwingExceptionWhenOutOfRange_Test::TestBody (469,475 samples, 0.02%)</title><rect x="1042.6" y="405" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1045.64" y="415.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (737,661 samples, 0.02%)</title><rect x="112.7" y="581" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="115.67" y="591.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (4,386,764 samples, 0.14%)</title><rect x="753.0" y="373" width="1.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="755.99" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (461,264 samples, 0.01%)</title><rect x="1046.8" y="485" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1049.78" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1,297,129,944 samples, 41.91%)</title><rect x="10.8" y="597" width="494.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.83" y="607.5" >[unknown]</text>
</g>
<g >
<title>__asan_stack_malloc_2 (738,348 samples, 0.02%)</title><rect x="832.9" y="389" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="835.87" y="399.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (2,209,386 samples, 0.07%)</title><rect x="724.3" y="373" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="727.25" y="383.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (490,686 samples, 0.02%)</title><rect x="785.5" y="357" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="788.45" y="367.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (922,317 samples, 0.03%)</title><rect x="1046.8" y="565" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1049.78" y="575.5" ></text>
</g>
<g >
<title>testing::TestResult::Passed (737,738 samples, 0.02%)</title><rect x="1045.8" y="357" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1048.80" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (7,326,525 samples, 0.24%)</title><rect x="771.8" y="309" width="2.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="774.82" y="319.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (16,212,637 samples, 0.52%)</title><rect x="702.9" y="597" width="6.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="705.92" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (1,474,796 samples, 0.05%)</title><rect x="985.7" y="341" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="988.65" y="351.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (42,292,688 samples, 1.37%)</title><rect x="60.0" y="549" width="16.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="63.01" y="559.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator= (2,946,709 samples, 0.10%)</title><rect x="55.5" y="581" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="58.46" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::IsRssLimitExceeded (1,465,089 samples, 0.05%)</title><rect x="23.0" y="549" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="26.02" y="559.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (1,474,080 samples, 0.05%)</title><rect x="1042.1" y="357" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1045.08" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1,457,490 samples, 0.05%)</title><rect x="921.9" y="373" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="924.87" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memset (1,453,006 samples, 0.05%)</title><rect x="920.2" y="325" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="923.21" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (967,026 samples, 0.03%)</title><rect x="434.6" y="581" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="437.64" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (737,866 samples, 0.02%)</title><rect x="749.0" y="277" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="751.98" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3,688,452 samples, 0.12%)</title><rect x="861.1" y="341" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="864.08" y="351.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (82,897,978 samples, 2.68%)</title><rect x="23.6" y="549" width="31.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="26.58" y="559.5" >__..</text>
</g>
<g >
<title>std::__chunk_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;testing::TestInfo**, std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;testing::TestSuite::Run (458,331 samples, 0.01%)</title><rect x="712.4" y="405" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="715.37" y="415.5" ></text>
</g>
<g >
<title>[unknown] (4,910,182 samples, 0.16%)</title><rect x="77.9" y="565" width="1.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="575.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (729,334 samples, 0.02%)</title><rect x="853.8" y="357" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="856.82" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::ReturnToAllocator (6,627,746 samples, 0.21%)</title><rect x="435.0" y="581" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="438.01" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (475,446 samples, 0.02%)</title><rect x="1045.2" y="341" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1048.25" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,053,867 samples, 0.32%)</title><rect x="82.6" y="565" width="3.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="85.57" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (732,459 samples, 0.02%)</title><rect x="921.0" y="373" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="924.04" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator[] (736,760 samples, 0.02%)</title><rect x="721.4" y="389" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="724.44" y="399.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (1,473,666 samples, 0.05%)</title><rect x="996.3" y="389" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="999.32" y="399.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (18,224,129 samples, 0.59%)</title><rect x="1182.9" y="597" width="6.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1185.88" y="607.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (3,684,713 samples, 0.12%)</title><rect x="1046.1" y="597" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1049.08" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,475,548 samples, 0.05%)</title><rect x="861.9" y="325" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="864.92" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="405" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="415.5" ></text>
</g>
<g >
<title>__sanitizer::internal_clone (753,563 samples, 0.02%)</title><rect x="1152.6" y="597" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1155.64" y="607.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (475,446 samples, 0.02%)</title><rect x="1045.2" y="309" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1048.25" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (461,264 samples, 0.01%)</title><rect x="1046.8" y="469" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1049.78" y="479.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (1,473,738 samples, 0.05%)</title><rect x="982.3" y="389" width="0.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="985.28" y="399.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (469,475 samples, 0.02%)</title><rect x="1042.6" y="389" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1045.64" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (9,291,043 samples, 0.30%)</title><rect x="795.0" y="341" width="3.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="797.96" y="351.5" ></text>
</g>
<g >
<title>do_lookup_x (865,976 samples, 0.03%)</title><rect x="497.9" y="581" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="500.87" y="591.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (720,010 samples, 0.02%)</title><rect x="890.2" y="373" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="893.22" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1,431,215 samples, 0.05%)</title><rect x="909.7" y="341" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="912.69" y="351.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (737,363 samples, 0.02%)</title><rect x="869.5" y="373" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="872.52" y="383.5" ></text>
</g>
<g >
<title>operator new[] (736,035 samples, 0.02%)</title><rect x="725.7" y="373" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="728.66" y="383.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;int, int,  (737,594 samples, 0.02%)</title><rect x="996.9" y="389" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="999.88" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (738,045 samples, 0.02%)</title><rect x="150.0" y="581" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="152.96" y="591.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (32,329,399 samples, 1.04%)</title><rect x="438.7" y="533" width="12.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="441.74" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (3,646,015 samples, 0.12%)</title><rect x="504.0" y="581" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="507.00" y="591.5" ></text>
</g>
<g >
<title>testing::internal::SumOverTestSuiteList (737,738 samples, 0.02%)</title><rect x="1045.8" y="421" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1048.80" y="431.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (1,471,433 samples, 0.05%)</title><rect x="784.0" y="357" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="786.95" y="367.5" ></text>
</g>
<g >
<title>__asan::asan_delete (490,771 samples, 0.02%)</title><rect x="784.5" y="357" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="787.52" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (736,096 samples, 0.02%)</title><rect x="908.0" y="293" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="911.04" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;testing::TestInfo**, std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt; &gt;::__normal_iterator (458,331 samples, 0.01%)</title><rect x="712.4" y="373" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="715.37" y="383.5" ></text>
</g>
<g >
<title>testing::internal::CountIf&lt;std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt;, bool  (737,738 samples, 0.02%)</title><rect x="1045.8" y="389" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1048.80" y="399.5" ></text>
</g>
<g >
<title>[unknown] (77,387,188 samples, 2.50%)</title><rect x="77.7" y="581" width="29.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.70" y="591.5" >[u..</text>
</g>
<g >
<title>[libasan.so.8.0.0] (488,977 samples, 0.02%)</title><rect x="792.7" y="373" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="795.72" y="383.5" ></text>
</g>
<g >
<title>operator delete[] (2,923,315 samples, 0.09%)</title><rect x="831.8" y="373" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="834.75" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (736,732 samples, 0.02%)</title><rect x="923.0" y="277" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="925.99" y="287.5" ></text>
</g>
<g >
<title>RUN_ALL_TESTS (875,245,277 samples, 28.28%)</title><rect x="712.4" y="565" width="333.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="715.37" y="575.5" >RUN_ALL_TESTS</text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (1,478,615 samples, 0.05%)</title><rect x="811.3" y="357" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="814.31" y="367.5" ></text>
</g>
<g >
<title>[unknown] (737,237 samples, 0.02%)</title><rect x="726.8" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="729.78" y="399.5" ></text>
</g>
<g >
<title>std::moneypunct&lt;char, false&gt;::_M_initialize_moneypunct (457,902 samples, 0.01%)</title><rect x="1189.8" y="597" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1192.83" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (33,127,864 samples, 1.07%)</title><rect x="1026.6" y="389" width="12.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1029.65" y="399.5" ></text>
</g>
<g >
<title>__asan_register_globals.part.0 (460,156 samples, 0.01%)</title><rect x="1047.1" y="565" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1050.13" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="261" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="271.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="197" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="207.5" ></text>
</g>
<g >
<title>testing::TestSuite::TestPassed (737,738 samples, 0.02%)</title><rect x="1045.8" y="373" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1048.80" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (980,067 samples, 0.03%)</title><rect x="766.1" y="357" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="769.05" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (5,399,154 samples, 0.17%)</title><rect x="783.6" y="389" width="2.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="786.58" y="399.5" ></text>
</g>
<g >
<title>operator new[] (736,543 samples, 0.02%)</title><rect x="931.1" y="373" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="934.13" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator&amp; (1,442,502 samples, 0.05%)</title><rect x="888.8" y="389" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="891.84" y="399.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (6,306,624 samples, 0.20%)</title><rect x="690.2" y="597" width="2.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="693.23" y="607.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (724,747 samples, 0.02%)</title><rect x="922.2" y="341" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="925.15" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (736,732 samples, 0.02%)</title><rect x="923.0" y="309" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="925.99" y="319.5" ></text>
</g>
<g >
<title>__sanitizer::ReservedAddressRange::Map (460,629 samples, 0.01%)</title><rect x="431.5" y="581" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="434.50" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (489,062 samples, 0.02%)</title><rect x="77.7" y="565" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="80.70" y="575.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (737,916 samples, 0.02%)</title><rect x="891.3" y="389" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="894.33" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1,471,175 samples, 0.05%)</title><rect x="995.8" y="357" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="998.76" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (163,513,377 samples, 5.28%)</title><rect x="1089.5" y="597" width="62.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1092.55" y="607.5" >__sani..</text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (1,474,222 samples, 0.05%)</title><rect x="1041.5" y="373" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1044.52" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,474,822 samples, 0.05%)</title><rect x="745.9" y="389" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="748.89" y="399.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (2,908,661 samples, 0.09%)</title><rect x="851.1" y="357" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="854.06" y="367.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (8,779,880 samples, 0.28%)</title><rect x="679.4" y="597" width="3.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="682.41" y="607.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="485" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,948,456 samples, 0.10%)</title><rect x="501.8" y="581" width="1.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="504.75" y="591.5" ></text>
</g>
<g >
<title>testing::internal::StringStreamToString (461,053 samples, 0.01%)</title><rect x="1047.0" y="501" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1049.96" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (967,530 samples, 0.03%)</title><rect x="768.3" y="357" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="771.28" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (737,123 samples, 0.02%)</title><rect x="748.7" y="341" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="751.70" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (19,158,174 samples, 0.62%)</title><rect x="714.1" y="373" width="7.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="717.14" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="149" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (737,300 samples, 0.02%)</title><rect x="982.8" y="389" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="985.84" y="399.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (6,374,660 samples, 0.21%)</title><rect x="757.8" y="389" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="760.84" y="399.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (15,793,914 samples, 0.51%)</title><rect x="692.6" y="597" width="6.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="695.63" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (724,256 samples, 0.02%)</title><rect x="906.9" y="341" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="909.94" y="351.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (736,921 samples, 0.02%)</title><rect x="891.9" y="389" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="894.89" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (735,422 samples, 0.02%)</title><rect x="1039.0" y="341" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1042.00" y="351.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (14,016,905 samples, 0.45%)</title><rect x="857.1" y="389" width="5.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="860.14" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (90,319,399 samples, 2.92%)</title><rect x="438.1" y="581" width="34.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="441.10" y="591.5" >__..</text>
</g>
<g >
<title>__asan::asan_memalign (490,215 samples, 0.02%)</title><rect x="754.7" y="373" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="757.67" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (490,143 samples, 0.02%)</title><rect x="772.6" y="261" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="775.57" y="271.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (461,127 samples, 0.01%)</title><rect x="498.2" y="549" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="501.20" y="559.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (2,211,480 samples, 0.07%)</title><rect x="725.9" y="373" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="728.94" y="383.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2,949,513 samples, 0.10%)</title><rect x="79.8" y="565" width="1.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="82.76" y="575.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (728,903 samples, 0.02%)</title><rect x="888.0" y="373" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="891.01" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (737,257 samples, 0.02%)</title><rect x="879.6" y="309" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="882.64" y="319.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (32,716,212 samples, 1.06%)</title><rect x="834.7" y="373" width="12.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="837.72" y="383.5" ></text>
</g>
<g >
<title>testing::internal::StringStreamToString (475,446 samples, 0.02%)</title><rect x="1045.2" y="389" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1048.25" y="399.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (736,382 samples, 0.02%)</title><rect x="994.1" y="325" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="997.08" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (730,345 samples, 0.02%)</title><rect x="908.6" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="911.60" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,469,444 samples, 0.05%)</title><rect x="149.4" y="581" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="152.40" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::internal_read (459,624 samples, 0.01%)</title><rect x="473.0" y="581" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="475.97" y="591.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (736,085 samples, 0.02%)</title><rect x="737.5" y="357" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="740.46" y="367.5" ></text>
</g>
<g >
<title>operator delete[] (980,511 samples, 0.03%)</title><rect x="759.7" y="357" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="762.71" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (2,209,260 samples, 0.07%)</title><rect x="1005.9" y="389" width="0.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1008.87" y="399.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (979,836 samples, 0.03%)</title><rect x="820.9" y="373" width="0.4" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="823.91" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (2,210,305 samples, 0.07%)</title><rect x="934.2" y="373" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="937.22" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (12,538,504 samples, 0.41%)</title><rect x="875.7" y="341" width="4.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="878.70" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (1,473,687 samples, 0.05%)</title><rect x="876.8" y="277" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="879.83" y="287.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (2,178,464 samples, 0.07%)</title><rect x="842.2" y="357" width="0.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="845.22" y="367.5" ></text>
</g>
<g >
<title>__interceptor_memset (1,473,703 samples, 0.05%)</title><rect x="994.4" y="325" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="997.36" y="335.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (730,330 samples, 0.02%)</title><rect x="891.6" y="325" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="894.61" y="335.5" ></text>
</g>
<g >
<title>__strlen_avx2 (16,199,999 samples, 0.52%)</title><rect x="925.0" y="373" width="6.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="927.96" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,439,426 samples, 0.05%)</title><rect x="886.9" y="357" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="889.91" y="367.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (736,550 samples, 0.02%)</title><rect x="1030.9" y="277" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1033.85" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (489,256 samples, 0.02%)</title><rect x="796.5" y="293" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="799.45" y="303.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (11,327,592 samples, 0.37%)</title><rect x="682.8" y="597" width="4.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="685.75" y="607.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (1,478,120 samples, 0.05%)</title><rect x="810.5" y="357" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="813.47" y="367.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="53" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="63.5" ></text>
</g>
<g >
<title>__interceptor_memmove (460,702 samples, 0.01%)</title><rect x="1046.3" y="421" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1049.25" y="431.5" ></text>
</g>
<g >
<title>__strpbrk_sse42 (12,511,748 samples, 0.40%)</title><rect x="490.4" y="581" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="493.41" y="591.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (21,364,727 samples, 0.69%)</title><rect x="713.3" y="389" width="8.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="716.29" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (977,694 samples, 0.03%)</title><rect x="797.4" y="261" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="800.38" y="271.5" ></text>
</g>
<g >
<title>testing::internal::SplitString (460,746 samples, 0.01%)</title><rect x="1046.4" y="485" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1049.43" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (488,712 samples, 0.02%)</title><rect x="785.8" y="389" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="788.83" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (737,764 samples, 0.02%)</title><rect x="741.7" y="341" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="744.67" y="351.5" ></text>
</g>
<g >
<title>[unknown] (730,330 samples, 0.02%)</title><rect x="891.6" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="894.61" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2,938,371 samples, 0.09%)</title><rect x="764.9" y="325" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="767.93" y="335.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (737,059 samples, 0.02%)</title><rect x="924.7" y="373" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="927.68" y="383.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (15,426,408 samples, 0.50%)</title><rect x="162.5" y="581" width="5.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="165.50" y="591.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (736,732 samples, 0.02%)</title><rect x="923.0" y="341" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="925.99" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (736,081 samples, 0.02%)</title><rect x="1031.7" y="357" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1034.70" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (736,964 samples, 0.02%)</title><rect x="1042.4" y="341" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1045.36" y="351.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;testing::TestInfo**, std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt; &gt;, testing::TestSuite::Run (458,331 samples, 0.01%)</title><rect x="712.4" y="469" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="715.37" y="479.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (737,413 samples, 0.02%)</title><rect x="1040.4" y="325" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1043.40" y="335.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::RunAllTests (875,245,277 samples, 28.28%)</title><rect x="712.4" y="501" width="333.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="715.37" y="511.5" >testing::internal::UnitTestImpl::RunAllTests</text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (1,473,666 samples, 0.05%)</title><rect x="996.3" y="373" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="999.32" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (490,467 samples, 0.02%)</title><rect x="761.9" y="373" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="764.95" y="383.5" ></text>
</g>
<g >
<title>__interceptor_strcmp.part.0 (737,934 samples, 0.02%)</title><rect x="869.0" y="373" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="871.95" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,162,529 samples, 0.07%)</title><rect x="853.0" y="357" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="856.00" y="367.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (737,725 samples, 0.02%)</title><rect x="725.9" y="357" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="728.94" y="367.5" ></text>
</g>
<g >
<title>__strnlen_ifunc (403,536 samples, 0.01%)</title><rect x="495.4" y="549" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="498.36" y="559.5" ></text>
</g>
<g >
<title>testing::internal::FilePath::GetCurrentDir (460,788 samples, 0.01%)</title><rect x="1046.1" y="533" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1049.08" y="543.5" ></text>
</g>
<g >
<title>testing::Message::GetString[abi:cxx11] (461,264 samples, 0.01%)</title><rect x="1046.8" y="517" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1049.78" y="527.5" ></text>
</g>
<g >
<title>[unknown] (90,319,399 samples, 2.92%)</title><rect x="438.1" y="549" width="34.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="441.10" y="559.5" >[u..</text>
</g>
<g >
<title>PtrCStringVector::operator+ (7,195,461 samples, 0.23%)</title><rect x="885.3" y="389" width="2.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="888.27" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (715,250 samples, 0.02%)</title><rect x="921.3" y="373" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="924.32" y="383.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (2,676,640 samples, 0.09%)</title><rect x="471.5" y="533" width="1.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="474.51" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3,684,144 samples, 0.12%)</title><rect x="1039.3" y="389" width="1.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1042.28" y="399.5" ></text>
</g>
<g >
<title>__interceptor_strcmp.part.0 (8,117,596 samples, 0.26%)</title><rect x="881.3" y="357" width="3.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="884.33" y="367.5" ></text>
</g>
<g >
<title>testing::internal::String::CStringEquals (489,408 samples, 0.02%)</title><rect x="801.1" y="389" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="804.11" y="399.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (736,732 samples, 0.02%)</title><rect x="923.0" y="357" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="925.99" y="367.5" ></text>
</g>
<g >
<title>testing::internal::FlagToEnvVar (461,053 samples, 0.01%)</title><rect x="1047.0" y="533" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1049.96" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadLister::ThreadLister (574,156 samples, 0.02%)</title><rect x="472.5" y="581" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="475.53" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (724,256 samples, 0.02%)</title><rect x="906.9" y="357" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="909.94" y="367.5" ></text>
</g>
<g >
<title>operator new[] (2,440,032 samples, 0.08%)</title><rect x="756.3" y="373" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="759.35" y="383.5" ></text>
</g>
<g >
<title>testing::internal::FlagToEnvVar (461,264 samples, 0.01%)</title><rect x="1046.8" y="533" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1049.78" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2,948,456 samples, 0.10%)</title><rect x="501.8" y="533" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="504.75" y="543.5" ></text>
</g>
<g >
<title>[unknown] (730,330 samples, 0.02%)</title><rect x="891.6" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="894.61" y="351.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator= (5,883,439 samples, 0.19%)</title><rect x="809.9" y="389" width="2.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="812.91" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (731,994 samples, 0.02%)</title><rect x="907.2" y="357" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="910.22" y="367.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (727,016 samples, 0.02%)</title><rect x="502.9" y="549" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="505.88" y="559.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (979,323 samples, 0.03%)</title><rect x="760.3" y="389" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="763.27" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,467,842 samples, 0.05%)</title><rect x="789.9" y="341" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="792.93" y="351.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest2_Test::TestBody (69,983,611 samples, 2.26%)</title><rect x="774.6" y="405" width="26.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="777.62" y="415.5" >P..</text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (737,866 samples, 0.02%)</title><rect x="749.0" y="341" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="751.98" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (738,319 samples, 0.02%)</title><rect x="745.9" y="373" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="748.89" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator[] (489,209 samples, 0.02%)</title><rect x="712.8" y="405" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="715.83" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt;::_S_relocate (460,702 samples, 0.01%)</title><rect x="1046.3" y="469" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1049.25" y="479.5" ></text>
</g>
<g >
<title>[tests] (740,479 samples, 0.02%)</title><rect x="831.5" y="373" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="834.47" y="383.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (8,275,901 samples, 0.27%)</title><rect x="687.1" y="597" width="3.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="690.07" y="607.5" ></text>
</g>
<g >
<title>__libc_start_call_main (875,245,277 samples, 28.28%)</title><rect x="712.4" y="597" width="333.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="715.37" y="607.5" >__libc_start_call_main</text>
</g>
<g >
<title>[libasan.so.8.0.0] (737,541 samples, 0.02%)</title><rect x="723.1" y="373" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="726.13" y="383.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (736,455 samples, 0.02%)</title><rect x="1041.2" y="325" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1044.24" y="335.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (1,474,222 samples, 0.05%)</title><rect x="1041.5" y="389" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1044.52" y="399.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (40,496,808 samples, 1.31%)</title><rect x="966.8" y="389" width="15.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="969.84" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (475,446 samples, 0.02%)</title><rect x="1045.2" y="325" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1048.25" y="335.5" ></text>
</g>
<g >
<title>testing::internal::TestEventRepeater::OnTestStart (491,394 samples, 0.02%)</title><rect x="1045.6" y="453" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1048.61" y="463.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (23,541,017 samples, 0.76%)</title><rect x="140.4" y="581" width="9.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="143.42" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (489,603 samples, 0.02%)</title><rect x="770.1" y="341" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="773.14" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (6,836,579 samples, 0.22%)</title><rect x="772.0" y="293" width="2.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="775.01" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (736,944 samples, 0.02%)</title><rect x="986.5" y="341" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="989.50" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3,683,046 samples, 0.12%)</title><rect x="932.8" y="373" width="1.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="935.82" y="383.5" ></text>
</g>
<g >
<title>testing::internal::StreamableToString&lt;long&gt; (948,318 samples, 0.03%)</title><rect x="1045.2" y="421" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1048.25" y="431.5" ></text>
</g>
<g >
<title>__sanitizer::internal_iserror (736,101 samples, 0.02%)</title><rect x="1153.5" y="597" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1156.47" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (736,386 samples, 0.02%)</title><rect x="1042.8" y="405" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1045.82" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (1,471,175 samples, 0.05%)</title><rect x="995.8" y="341" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="998.76" y="351.5" ></text>
</g>
<g >
<title>testing::internal::TestEventRepeater::OnTestIterationEnd (737,738 samples, 0.02%)</title><rect x="1045.8" y="485" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1048.80" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (1,471,916 samples, 0.05%)</title><rect x="994.9" y="389" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="997.92" y="399.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (736,337 samples, 0.02%)</title><rect x="922.4" y="389" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="925.43" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (729,581 samples, 0.02%)</title><rect x="844.7" y="357" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="847.69" y="367.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (736,550 samples, 0.02%)</title><rect x="1030.9" y="293" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1033.85" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (7,817,122 samples, 0.25%)</title><rect x="771.6" y="325" width="3.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="774.64" y="335.5" ></text>
</g>
<g >
<title>testing::internal::TestEventRepeater::OnTestEnd (948,318 samples, 0.03%)</title><rect x="1045.2" y="453" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1048.25" y="463.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (737,764 samples, 0.02%)</title><rect x="741.7" y="293" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="744.67" y="303.5" ></text>
</g>
<g >
<title>_dl_load_cache_lookup (391,874 samples, 0.01%)</title><rect x="1181.9" y="581" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1184.87" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Deallocate (5,888,263 samples, 0.19%)</title><rect x="409.5" y="581" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="412.53" y="591.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;testing::TestInfo**, std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt; &gt;, testing::TestInfo**, __gnu_cxx::__ops::_Iter_comp_iter&lt;testing::TestSuite::Run (458,331 samples, 0.01%)</title><rect x="712.4" y="421" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="715.37" y="431.5" ></text>
</g>
<g >
<title>__sanitizer::FlagHandler&lt;bool&gt;::Format (460,022 samples, 0.01%)</title><rect x="412.0" y="581" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="414.95" y="591.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest1_Test::TestBody (66,505,492 samples, 2.15%)</title><rect x="749.3" y="405" width="25.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="752.26" y="415.5" >P..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_M_head (488,841 samples, 0.02%)</title><rect x="765.3" y="309" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="768.30" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5,158,142 samples, 0.17%)</title><rect x="746.5" y="373" width="1.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="749.45" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (737,814 samples, 0.02%)</title><rect x="867.5" y="373" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="870.55" y="383.5" ></text>
</g>
<g >
<title>[tests] (2,165,131 samples, 0.07%)</title><rect x="854.4" y="373" width="0.8" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="857.37" y="383.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (737,229 samples, 0.02%)</title><rect x="1007.3" y="357" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1010.28" y="367.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,942,770 samples, 0.10%)</title><rect x="451.1" y="533" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="454.07" y="543.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (736,928 samples, 0.02%)</title><rect x="1007.0" y="357" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1009.99" y="367.5" ></text>
</g>
<g >
<title>__interceptor_strlen (737,606 samples, 0.02%)</title><rect x="727.6" y="389" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="730.62" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (1,461,494 samples, 0.05%)</title><rect x="908.0" y="325" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="911.04" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (22,855,109 samples, 0.74%)</title><rect x="737.2" y="389" width="8.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="740.17" y="399.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (25,774,888 samples, 0.83%)</title><rect x="813.3" y="389" width="9.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="816.28" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (736,973 samples, 0.02%)</title><rect x="984.5" y="357" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="987.53" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (737,866 samples, 0.02%)</title><rect x="749.0" y="325" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="751.98" y="335.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (1,445,409 samples, 0.05%)</title><rect x="888.3" y="373" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="891.29" y="383.5" ></text>
</g>
<g >
<title>testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (875,245,277 samples, 28.28%)</title><rect x="712.4" y="533" width="333.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="715.37" y="543.5" >testing::internal::HandleExceptionsInMethodIf..</text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (724,204 samples, 0.02%)</title><rect x="856.6" y="389" width="0.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="859.58" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="517" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="527.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (726,213 samples, 0.02%)</title><rect x="833.9" y="389" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="836.90" y="399.5" ></text>
</g>
<g >
<title>testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (875,245,277 samples, 28.28%)</title><rect x="712.4" y="517" width="333.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="715.37" y="527.5" >testing::internal::HandleSehExceptionsInMetho..</text>
</g>
<g >
<title>__interceptor_memcpy (737,248 samples, 0.02%)</title><rect x="998.0" y="373" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1001.01" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="213" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="223.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Recycle (1,475,614 samples, 0.05%)</title><rect x="1086.4" y="597" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1089.36" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::DrainHalfMax (1,468,659 samples, 0.05%)</title><rect x="437.5" y="581" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="440.54" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (737,866 samples, 0.02%)</title><rect x="749.0" y="309" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="751.98" y="319.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (490,271 samples, 0.02%)</title><rect x="833.2" y="389" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="836.15" y="399.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (52,732,162 samples, 1.70%)</title><rect x="56.6" y="581" width="20.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="59.59" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (1,438,327 samples, 0.05%)</title><rect x="827.9" y="357" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="830.86" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memset (1,368,182 samples, 0.04%)</title><rect x="1154.0" y="597" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1157.03" y="607.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (371,812 samples, 0.01%)</title><rect x="1182.0" y="581" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1185.02" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (738,596 samples, 0.02%)</title><rect x="986.2" y="325" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="989.22" y="335.5" ></text>
</g>
<g >
<title>testing::UnitTest::successful_test_count (737,738 samples, 0.02%)</title><rect x="1045.8" y="453" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1048.80" y="463.5" ></text>
</g>
<g >
<title>testing::TestSuite::Run (874,507,539 samples, 28.26%)</title><rect x="712.4" y="485" width="333.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="715.37" y="495.5" >testing::TestSuite::Run</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1,473,292 samples, 0.05%)</title><rect x="747.9" y="357" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="750.86" y="367.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (5,105,871 samples, 0.16%)</title><rect x="86.4" y="565" width="1.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="89.40" y="575.5" ></text>
</g>
<g >
<title>__strlen_avx2 (19,886,673 samples, 0.64%)</title><rect x="998.3" y="373" width="7.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1001.29" y="383.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (978,761 samples, 0.03%)</title><rect x="760.6" y="389" width="0.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="763.64" y="399.5" ></text>
</g>
<g >
<title>[unknown] (738,045 samples, 0.02%)</title><rect x="150.0" y="565" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="152.96" y="575.5" ></text>
</g>
<g >
<title>__interceptor_strlen (1,464,972 samples, 0.05%)</title><rect x="833.3" y="389" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="836.34" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (489,444 samples, 0.02%)</title><rect x="786.9" y="389" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="789.94" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (737,647 samples, 0.02%)</title><rect x="743.9" y="341" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="746.92" y="351.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (720,039 samples, 0.02%)</title><rect x="855.5" y="373" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="858.47" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,948,456 samples, 0.10%)</title><rect x="501.8" y="517" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="504.75" y="527.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (725,397 samples, 0.02%)</title><rect x="841.9" y="357" width="0.3" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="844.94" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (738,019 samples, 0.02%)</title><rect x="736.9" y="389" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="739.89" y="399.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (2,203,024 samples, 0.07%)</title><rect x="114.1" y="581" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="117.07" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (3,441,024 samples, 0.11%)</title><rect x="470.2" y="533" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="473.20" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (39,167,963 samples, 1.27%)</title><rect x="906.4" y="389" width="14.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="909.39" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (734,859 samples, 0.02%)</title><rect x="984.8" y="357" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="987.81" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (29,461,290 samples, 0.95%)</title><rect x="983.7" y="373" width="11.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="986.69" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,938,057 samples, 0.09%)</title><rect x="502.9" y="565" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="505.88" y="575.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (14,331,571 samples, 0.46%)</title><rect x="107.2" y="581" width="5.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="110.20" y="591.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="181" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="191.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (5,891,936 samples, 0.19%)</title><rect x="932.0" y="389" width="2.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="934.98" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2,946,709 samples, 0.10%)</title><rect x="55.5" y="565" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="58.46" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="437" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="447.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (14,177,377 samples, 0.46%)</title><rect x="769.2" y="357" width="5.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="772.21" y="367.5" ></text>
</g>
<g >
<title>testing::AssertionResult::operator bool (1,715,978 samples, 0.06%)</title><rect x="1043.9" y="405" width="0.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1046.94" y="415.5" ></text>
</g>
<g >
<title>operator delete[] (5,156,463 samples, 0.17%)</title><rect x="828.4" y="357" width="2.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="831.41" y="367.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (2,213,406 samples, 0.07%)</title><rect x="868.1" y="373" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="871.11" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2,202,543 samples, 0.07%)</title><rect x="1040.7" y="373" width="0.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1043.68" y="383.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (456,411,328 samples, 14.75%)</title><rect x="505.4" y="597" width="174.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="508.39" y="607.5" >__asan::Allocator::All..</text>
</g>
<g >
<title>__asan::GetFakeStackFast (705,124 samples, 0.02%)</title><rect x="907.8" y="325" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="910.77" y="335.5" ></text>
</g>
<g >
<title>[unknown] (734,065 samples, 0.02%)</title><rect x="55.2" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="58.18" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="389" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="399.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::AddTestInfo (921,448 samples, 0.03%)</title><rect x="1046.3" y="533" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1049.25" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;testing::TestInfo**, std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt; &gt;::operator+ (458,331 samples, 0.01%)</title><rect x="712.4" y="389" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="715.37" y="399.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (1,472,931 samples, 0.05%)</title><rect x="935.1" y="389" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="938.07" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (27,613,468 samples, 0.89%)</title><rect x="910.2" y="357" width="10.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="913.24" y="367.5" ></text>
</g>
<g >
<title>operator new[] (2,906,066 samples, 0.09%)</title><rect x="846.1" y="357" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="849.09" y="367.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;testing::TestInfo**, testing::TestInfo**, std::allocator&lt;testing::TestInfo*&gt; &gt; (460,702 samples, 0.01%)</title><rect x="1046.3" y="453" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1049.25" y="463.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (12,729,956 samples, 0.41%)</title><rect x="156.5" y="581" width="4.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="159.54" y="591.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (2,938,057 samples, 0.09%)</title><rect x="502.9" y="581" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="505.88" y="591.5" ></text>
</g>
<g >
<title>tests (3,094,907,181 samples, 100.00%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >tests</text>
</g>
<g >
<title>_dl_map_object (763,686 samples, 0.02%)</title><rect x="1181.9" y="597" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1184.87" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1,471,429 samples, 0.05%)</title><rect x="1030.0" y="341" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1033.01" y="351.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,940,189 samples, 0.10%)</title><rect x="113.0" y="581" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="115.95" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (22,602,021 samples, 0.73%)</title><rect x="1077.7" y="597" width="8.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1080.74" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (475,446 samples, 0.02%)</title><rect x="1045.2" y="373" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1048.25" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::internal_close (1,427,254 samples, 0.05%)</title><rect x="1152.9" y="597" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1155.93" y="607.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (5,144,010 samples, 0.17%)</title><rect x="809.9" y="373" width="2.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="812.91" y="383.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (16,518,192 samples, 0.53%)</title><rect x="150.2" y="581" width="6.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="153.24" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (709,055 samples, 0.02%)</title><rect x="906.7" y="357" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="909.67" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (10,325,520 samples, 0.33%)</title><rect x="876.0" y="325" width="3.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="878.99" y="335.5" ></text>
</g>
<g >
<title>testing::internal::PrettyUnitTestResultPrinter::OnTestEnd (948,318 samples, 0.03%)</title><rect x="1045.2" y="437" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1048.25" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (738,534 samples, 0.02%)</title><rect x="873.2" y="357" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="876.17" y="367.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (489,705 samples, 0.02%)</title><rect x="768.1" y="357" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="771.10" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (5,901,452 samples, 0.19%)</title><rect x="860.2" y="357" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="863.23" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::internal_open (455,602 samples, 0.01%)</title><rect x="472.8" y="581" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="475.80" y="591.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;unsigned long, unsigned long,  (21,489,895 samples, 0.69%)</title><rect x="766.4" y="389" width="8.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="769.42" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (3,145,675 samples, 0.10%)</title><rect x="433.4" y="581" width="1.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="436.44" y="591.5" ></text>
</g>
<g >
<title>__lsan::MarkIndirectlyLeakedCb (9,800,875 samples, 0.32%)</title><rect x="215.8" y="581" width="3.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="218.75" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (707,633 samples, 0.02%)</title><rect x="909.4" y="341" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="912.42" y="351.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (26,289,537 samples, 0.85%)</title><rect x="1052.7" y="597" width="10.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1055.72" y="607.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (46,383,846 samples, 1.50%)</title><rect x="1009.0" y="389" width="17.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1011.96" y="399.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (3,680,323 samples, 0.12%)</title><rect x="819.5" y="373" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="822.51" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="373" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="383.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;unsigned long, int,  (736,732 samples, 0.02%)</title><rect x="923.0" y="389" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="925.99" y="399.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;unsigned long, int&gt; (736,732 samples, 0.02%)</title><rect x="923.0" y="373" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="925.99" y="383.5" ></text>
</g>
<g >
<title>__interceptor_strlen (716,615 samples, 0.02%)</title><rect x="887.7" y="373" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="890.74" y="383.5" ></text>
</g>
<g >
<title>isDerivedFromAtOffset (738,045 samples, 0.02%)</title><rect x="150.0" y="549" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="152.96" y="559.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (2,948,456 samples, 0.10%)</title><rect x="501.8" y="549" width="1.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="504.75" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (736,906 samples, 0.02%)</title><rect x="736.6" y="389" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="739.61" y="399.5" ></text>
</g>
<g >
<title>testing::internal::String::CStringEquals (1,475,813 samples, 0.05%)</title><rect x="884.7" y="389" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="887.71" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (66,066,586 samples, 2.13%)</title><rect x="1154.6" y="597" width="25.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1157.55" y="607.5" >_..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (26,160,462 samples, 0.85%)</title><rect x="910.2" y="341" width="10.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="913.24" y="351.5" ></text>
</g>
<g >
<title>__interceptor_clock_gettime.part.0 (735,609 samples, 0.02%)</title><rect x="712.5" y="437" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="715.55" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_head (1,475,548 samples, 0.05%)</title><rect x="861.9" y="309" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="864.92" y="319.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (736,051 samples, 0.02%)</title><rect x="1005.9" y="373" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1008.87" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (2,950,433 samples, 0.10%)</title><rect x="878.5" y="261" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="881.52" y="271.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (2,210,305 samples, 0.07%)</title><rect x="934.2" y="389" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="937.22" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,461,464 samples, 0.05%)</title><rect x="1089.0" y="597" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1091.99" y="607.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (737,413 samples, 0.02%)</title><rect x="1040.4" y="341" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1043.40" y="351.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (737,413 samples, 0.02%)</title><rect x="1040.4" y="357" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1043.40" y="367.5" ></text>
</g>
<g >
<title>operator delete (734,377 samples, 0.02%)</title><rect x="995.8" y="325" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="998.76" y="335.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (2,170,645 samples, 0.07%)</title><rect x="852.2" y="357" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="855.17" y="367.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperSTREQ (27,384,928 samples, 0.88%)</title><rect x="790.7" y="389" width="10.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="793.67" y="399.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1,448,957 samples, 0.05%)</title><rect x="808.8" y="373" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="811.80" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="341" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="351.5" ></text>
</g>
<g >
<title>testing::AssertionResult::operator bool (1,956,628 samples, 0.06%)</title><rect x="761.0" y="389" width="0.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="764.01" y="399.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (724,094 samples, 0.02%)</title><rect x="855.2" y="373" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="858.20" y="383.5" ></text>
</g>
<g >
<title>__sched_yield (719,273 samples, 0.02%)</title><rect x="1181.6" y="597" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1184.60" y="607.5" ></text>
</g>
<g >
<title>__asan_unregister_globals (735,587 samples, 0.02%)</title><rect x="79.2" y="549" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="82.20" y="559.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (27,378,963 samples, 0.88%)</title><rect x="453.0" y="533" width="10.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="456.03" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="277" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="287.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (738,196 samples, 0.02%)</title><rect x="722.8" y="373" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="725.85" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (1,475,213 samples, 0.05%)</title><rect x="727.1" y="389" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="730.06" y="399.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (4,423,747 samples, 0.14%)</title><rect x="1006.7" y="373" width="1.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1009.71" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_head (737,262 samples, 0.02%)</title><rect x="996.6" y="309" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="999.60" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt;::_M_realloc_insert&lt;testing::TestInfo* const&amp;&gt; (460,702 samples, 0.01%)</title><rect x="1046.3" y="485" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1049.25" y="495.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="229" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="239.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (2,910,283 samples, 0.09%)</title><rect x="161.4" y="581" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="164.39" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (735,485 samples, 0.02%)</title><rect x="1040.1" y="373" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1043.12" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (737,764 samples, 0.02%)</title><rect x="741.7" y="309" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="744.67" y="319.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (14,471,483 samples, 0.47%)</title><rect x="804.1" y="389" width="5.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="807.11" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17,670,333 samples, 0.57%)</title><rect x="1032.3" y="341" width="6.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1035.26" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2,186,240 samples, 0.07%)</title><rect x="890.5" y="373" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="893.50" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (737,262 samples, 0.02%)</title><rect x="996.6" y="325" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="999.60" y="335.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (736,379 samples, 0.02%)</title><rect x="934.5" y="357" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="937.50" y="367.5" ></text>
</g>
<g >
<title>[unknown] (737,237 samples, 0.02%)</title><rect x="726.8" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="729.78" y="367.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (12,234,479 samples, 0.40%)</title><rect x="761.8" y="389" width="4.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="764.76" y="399.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (737,866 samples, 0.02%)</title><rect x="749.0" y="357" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="751.98" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (4,144,865 samples, 0.13%)</title><rect x="468.6" y="533" width="1.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="471.62" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="549" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="559.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (24,266,452 samples, 0.78%)</title><rect x="114.9" y="581" width="9.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="117.91" y="591.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (736,588 samples, 0.02%)</title><rect x="855.7" y="373" width="0.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="858.75" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (737,853 samples, 0.02%)</title><rect x="834.2" y="389" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="837.17" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (489,218 samples, 0.02%)</title><rect x="797.0" y="277" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="800.01" y="287.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (19,103,181 samples, 0.62%)</title><rect x="776.3" y="389" width="7.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="779.30" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (459,449 samples, 0.01%)</title><rect x="1047.3" y="565" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1050.31" y="575.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (419,230 samples, 0.01%)</title><rect x="104.8" y="565" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="107.80" y="575.5" ></text>
</g>
<g >
<title>__sanitizer::IsRssLimitExceeded (1,469,000 samples, 0.05%)</title><rect x="76.1" y="549" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="79.13" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,948,456 samples, 0.10%)</title><rect x="501.8" y="565" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="504.75" y="575.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest4_Test::TestBody (9,369,773 samples, 0.30%)</title><rect x="885.3" y="405" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="888.27" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,474,011 samples, 0.05%)</title><rect x="986.8" y="357" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="989.78" y="367.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (727,376 samples, 0.02%)</title><rect x="888.6" y="357" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="891.56" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,471,886 samples, 0.05%)</title><rect x="1031.1" y="325" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1034.14" y="335.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (736,707 samples, 0.02%)</title><rect x="723.4" y="373" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="726.41" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (735,953 samples, 0.02%)</title><rect x="1028.0" y="357" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1031.05" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (18,812,415 samples, 0.61%)</title><rect x="847.2" y="373" width="7.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="850.20" y="383.5" ></text>
</g>
<g >
<title>[tests] (489,003 samples, 0.02%)</title><rect x="785.6" y="389" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="788.64" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (1,476,110 samples, 0.05%)</title><rect x="879.9" y="325" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="882.92" y="335.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (710,192 samples, 0.02%)</title><rect x="886.6" y="357" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="889.64" y="367.5" ></text>
</g>
<g >
<title>[unknown] (461,127 samples, 0.01%)</title><rect x="498.2" y="565" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="501.20" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,473,666 samples, 0.05%)</title><rect x="996.3" y="341" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="999.32" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (13,498,188 samples, 0.44%)</title><rect x="463.5" y="533" width="5.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="466.47" y="543.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (738,526 samples, 0.02%)</title><rect x="723.7" y="373" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="726.69" y="383.5" ></text>
</g>
<g >
<title>_dl_relocate_object (6,197,172 samples, 0.20%)</title><rect x="495.5" y="549" width="2.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="498.51" y="559.5" ></text>
</g>
<g >
<title>__lsan::ProcessGlobalRegionsCallback (489,992 samples, 0.02%)</title><rect x="1047.9" y="597" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1050.86" y="607.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (6,045,815 samples, 0.20%)</title><rect x="698.7" y="597" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="701.65" y="607.5" ></text>
</g>
<g >
<title>testing::AssertionResult::operator bool (1,466,207 samples, 0.05%)</title><rect x="787.1" y="389" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="790.13" y="399.5" ></text>
</g>
<g >
<title>[unknown] (3,646,015 samples, 0.12%)</title><rect x="504.0" y="565" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.00" y="575.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (735,722 samples, 0.02%)</title><rect x="713.6" y="373" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="716.58" y="383.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (489,513,308 samples, 15.82%)</title><rect x="222.5" y="581" width="186.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="225.54" y="591.5" >__memset_avx2_unaligned_..</text>
</g>
<g >
<title>__asan::GetCurrentThread (737,741 samples, 0.02%)</title><rect x="1007.6" y="357" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1010.56" y="367.5" ></text>
</g>
<g >
<title>testing::UnitTest::Run (875,245,277 samples, 28.28%)</title><rect x="712.4" y="549" width="333.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="715.37" y="559.5" >testing::UnitTest::Run</text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,159,992 samples, 0.07%)</title><rect x="10.8" y="549" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.83" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5,158,142 samples, 0.17%)</title><rect x="746.5" y="389" width="1.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="749.45" y="399.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperSTREQ (58,281,710 samples, 1.88%)</title><rect x="862.5" y="389" width="22.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="865.48" y="399.5" >t..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (9,588,263 samples, 0.31%)</title><rect x="876.0" y="309" width="3.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="878.99" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (2,176,912 samples, 0.07%)</title><rect x="10.0" y="597" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (19,143,508 samples, 0.62%)</title><rect x="1032.0" y="357" width="7.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1034.98" y="367.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="533" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (717,076 samples, 0.02%)</title><rect x="810.2" y="357" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="813.19" y="367.5" ></text>
</g>
<g >
<title>__interceptor_strcmp.part.0 (6,846,806 samples, 0.22%)</title><rect x="798.5" y="357" width="2.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="801.50" y="367.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (27,979,754 samples, 0.90%)</title><rect x="88.3" y="565" width="10.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="91.35" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (736,964 samples, 0.02%)</title><rect x="1042.4" y="325" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1045.36" y="335.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (33,429,160 samples, 1.08%)</title><rect x="10.8" y="581" width="12.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.83" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_Head_base (489,256 samples, 0.02%)</title><rect x="797.8" y="261" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="800.76" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (33,127,864 samples, 1.07%)</title><rect x="1026.6" y="373" width="12.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1029.65" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator&amp; (734,065 samples, 0.02%)</title><rect x="55.2" y="581" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="58.18" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (724,747 samples, 0.02%)</title><rect x="922.2" y="357" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="925.15" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (460,746 samples, 0.01%)</title><rect x="1046.4" y="437" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1049.43" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (487,961 samples, 0.02%)</title><rect x="764.6" y="341" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="767.56" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (489,506 samples, 0.02%)</title><rect x="756.2" y="373" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="759.16" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (737,123 samples, 0.02%)</title><rect x="748.7" y="325" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="751.70" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (733,631 samples, 0.02%)</title><rect x="1041.0" y="357" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1043.96" y="367.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (489,573 samples, 0.02%)</title><rect x="822.2" y="373" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="825.23" y="383.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (11,735,479 samples, 0.38%)</title><rect x="794.0" y="357" width="4.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="797.03" y="367.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (489,860 samples, 0.02%)</title><rect x="769.0" y="357" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="772.03" y="367.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;testing::TestInfo*, testing::TestInfo*&gt; (460,702 samples, 0.01%)</title><rect x="1046.3" y="437" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1049.25" y="447.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::GetTestSuite (460,746 samples, 0.01%)</title><rect x="1046.4" y="517" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1049.43" y="527.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (4,620,206 samples, 0.15%)</title><rect x="431.7" y="581" width="1.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="434.68" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,895,446 samples, 0.09%)</title><rect x="826.8" y="357" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="829.76" y="367.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator= (21,359,182 samples, 0.69%)</title><rect x="997.7" y="389" width="8.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1000.73" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (2,644,418 samples, 0.09%)</title><rect x="76.7" y="581" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="79.69" y="591.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (472,872 samples, 0.02%)</title><rect x="1045.4" y="373" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1048.43" y="383.5" ></text>
</g>
<g >
<title>main (875,245,277 samples, 28.28%)</title><rect x="712.4" y="581" width="333.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="715.37" y="591.5" >main</text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (50,818,761 samples, 1.64%)</title><rect x="412.1" y="581" width="19.4" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="415.13" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (489,433 samples, 0.02%)</title><rect x="790.5" y="357" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="793.49" y="367.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (978,430 samples, 0.03%)</title><rect x="792.9" y="373" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="795.91" y="383.5" ></text>
</g>
<g >
<title>PtrCStringVector::size (1,469,484 samples, 0.05%)</title><rect x="757.3" y="389" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="760.28" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (11,257,482 samples, 0.36%)</title><rect x="762.1" y="373" width="4.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="765.13" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (737,866 samples, 0.02%)</title><rect x="749.0" y="293" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="751.98" y="303.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (733,460 samples, 0.02%)</title><rect x="1008.4" y="325" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1011.40" y="335.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (5,399,154 samples, 0.17%)</title><rect x="783.6" y="373" width="2.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="786.58" y="383.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1,475,287 samples, 0.05%)</title><rect x="725.1" y="373" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="728.09" y="383.5" ></text>
</g>
<g >
<title>[unknown] (733,460 samples, 0.02%)</title><rect x="1008.4" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1011.40" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::internal_read (460,022 samples, 0.01%)</title><rect x="412.0" y="549" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="414.95" y="559.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (2,214,485 samples, 0.07%)</title><rect x="77.9" y="37" width="0.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="80.89" y="47.5" ></text>
</g>
<g >
<title>[unknown] (734,394 samples, 0.02%)</title><rect x="679.1" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="682.13" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (735,871 samples, 0.02%)</title><rect x="1031.4" y="309" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1034.42" y="319.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="117" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (730,363 samples, 0.02%)</title><rect x="920.8" y="357" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="923.77" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (38,435,504 samples, 1.24%)</title><rect x="906.4" y="373" width="14.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="909.39" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,473,209 samples, 0.05%)</title><rect x="1030.6" y="325" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1033.57" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (730,345 samples, 0.02%)</title><rect x="908.6" y="325" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="911.60" y="335.5" ></text>
</g>
<g >
<title>foo_2 (58,039,235 samples, 1.88%)</title><rect x="834.5" y="389" width="22.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="837.45" y="399.5" >f..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (1,473,666 samples, 0.05%)</title><rect x="996.3" y="357" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="999.32" y="367.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1,382,236 samples, 0.04%)</title><rect x="1046.1" y="565" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1049.08" y="575.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (4,316,983 samples, 0.14%)</title><rect x="843.0" y="357" width="1.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="846.05" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1,457,490 samples, 0.05%)</title><rect x="921.9" y="389" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="924.87" y="399.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (1,469,299 samples, 0.05%)</title><rect x="754.9" y="373" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="757.85" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_M_head (737,262 samples, 0.02%)</title><rect x="996.6" y="293" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="999.60" y="303.5" ></text>
</g>
<g >
<title>[unknown] (730,330 samples, 0.02%)</title><rect x="891.6" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="894.61" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (3,687,726 samples, 0.12%)</title><rect x="738.9" y="341" width="1.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="741.86" y="351.5" ></text>
</g>
<g >
<title>[unknown] (2,214,485 samples, 0.07%)</title><rect x="77.9" y="69" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="80.89" y="79.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;testing::TestInfo**, std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;testing::TestSuite::Run (458,331 samples, 0.01%)</title><rect x="712.4" y="453" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="715.37" y="463.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (4,343,543 samples, 0.14%)</title><rect x="849.4" y="357" width="1.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="852.41" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,210,503 samples, 0.07%)</title><rect x="740.8" y="341" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="743.83" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_head (737,123 samples, 0.02%)</title><rect x="748.7" y="309" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="751.70" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (486,995 samples, 0.02%)</title><rect x="773.7" y="245" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="776.69" y="255.5" ></text>
</g>
</g>
</svg>
